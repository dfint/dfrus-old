-- Устаревшая версия патча

include std/console.e
include std/filesys.e
include std/search.e

include patcher.e
include pe.e
include disasm.e

global integer debug = 0
include patchdf.e

sequence path = ""
sequence cmd = command_line()
if length(cmd)>2 then
    path = cmd[3]
    if length(cmd)>3 and equal(cmd[4],"debug") then
        debug = 1
    end if
end if

constant df1 = path & "Dwarf Fortress.exe"
constant df2 = path & "Dwarf Fortress Rus.exe"

printf(1,"Copying \"%s\"\nTo \"%s\"... ",{df1,df2})
if not copy_file(df1,df2,1) then
    puts(1,"Failed.")
    wait_key()
    abort(1)
else
    puts(1,"Success.\n")
end if

atom fn = open_pe(df2)

-----------------------------------------------------------------------------
puts(1,"Enabling the cyrillic alphabet...\n")

fpoke(fn, #2F07DC, MOVZX)
fpoke(fn, #2F063E, MOVZX)
patch_unicode_table(fn, #7338D8)

-----------------------------------------------------------------------------
puts(1,"Loading translation file...\n")

sequence trans = load_trans_file("trans.txt")

-----------------------------------------------------------------------------
puts(1,"Finding cross-referencess...\n")

constant pe_header = check_pe(fn) -- todo: проверка валидности
global constant image_base = fpeek4u(fn,pe_header+PE_IMAGE_BASE)
constant sections = get_section_table(fn)

-- Получаем адреса всех перемещаемых элементов:
sequence relocs = get_relocations(fn,sections)

sequence xref_table = get_cross_references(fn,relocs,sections)

sequence objs = xref_table[1], xrefs = xref_table[2]

-----------------------------------------------------------------------------
puts(1,"Translating...\n")

sequence x
integer k

for i = 1 to length(trans) do
    if length(trans[i][2])>=length(trans[i][3]) then
        fpoke(fn, trans[i][1], trans[i][3]&repeat(0,1+length(trans[i][2])-length(trans[i][3])))
    else
        k = binary_search(trans[i][1],objs)
        if k < 0 then
            if debug then
                printf(1,"Warning: References to string at %x offset not found.\n",trans[i][1])
            end if
            continue
        end if
        x = xrefs[k]
        if align(length(trans[i][2])+1)>=length(trans[i][3])+1 then
            for j = 1 to length(x) do
                -- исправить длину строки
                if fix_len(fn, x[j], length(trans[i][2]), length(trans[i][3])) then
                    fpoke(fn, trans[i][1], trans[i][3]&0)
                end if
            end for
        else
            -- stub
        end if
    end if
end for

close(fn)

puts(1,"Done.")
wait_key()
